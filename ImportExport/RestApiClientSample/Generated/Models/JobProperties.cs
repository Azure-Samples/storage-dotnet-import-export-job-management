// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace StorageImportExport.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class JobProperties
    {
        /// <summary>
        /// Initializes a new instance of the JobProperties class.
        /// </summary>
        public JobProperties() { }

        /// <summary>
        /// Initializes a new instance of the JobProperties class.
        /// </summary>
        public JobProperties(string location = default(string), JobType? type = default(JobType?), string friendlyName = default(string), string description = default(string), string metadata = default(string), string state = default(string), bool? cancelRequested = default(bool?), int? percentComplete = default(int?), ReturnAddress returnAddress = default(ReturnAddress), ReturnShipping returnShipping = default(ReturnShipping), ShippingInformation shippingInformation = default(ShippingInformation), PackageInfomation deliveryPackage = default(PackageInfomation), PackageInfomation returnPackage = default(PackageInfomation), string importExportStatesPath = default(string), bool? enableVerboseLog = default(bool?), bool? backupDriveManifest = default(bool?), string incompleteBlobListUri = default(string), string verboseLogUri = default(string), string errorLogUri = default(string), string manifestUri = default(string))
        {
            Location = location;
            Type = type;
            FriendlyName = friendlyName;
            Description = description;
            Metadata = metadata;
            State = state;
            CancelRequested = cancelRequested;
            PercentComplete = percentComplete;
            ReturnAddress = returnAddress;
            ReturnShipping = returnShipping;
            ShippingInformation = shippingInformation;
            DeliveryPackage = deliveryPackage;
            ReturnPackage = returnPackage;
            ImportExportStatesPath = importExportStatesPath;
            EnableVerboseLog = enableVerboseLog;
            BackupDriveManifest = backupDriveManifest;
            IncompleteBlobListUri = incompleteBlobListUri;
            VerboseLogUri = verboseLogUri;
            ErrorLogUri = errorLogUri;
            ManifestUri = manifestUri;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Location")]
        public string Location { get; set; }

        /// <summary>
        /// Indicates whether this is an import job or an export job. .
        /// Possible values include: 'Import', 'Export'
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public JobType? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FriendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Metadata")]
        public string Metadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "State")]
        public string State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CancelRequested")]
        public bool? CancelRequested { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PercentComplete")]
        public int? PercentComplete { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ReturnAddress")]
        public ReturnAddress ReturnAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ReturnShipping")]
        public ReturnShipping ReturnShipping { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ShippingInformation")]
        public ShippingInformation ShippingInformation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DeliveryPackage")]
        public PackageInfomation DeliveryPackage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ReturnPackage")]
        public PackageInfomation ReturnPackage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ImportExportStatesPath")]
        public string ImportExportStatesPath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EnableVerboseLog")]
        public bool? EnableVerboseLog { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BackupDriveManifest")]
        public bool? BackupDriveManifest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncompleteBlobListUri")]
        public string IncompleteBlobListUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VerboseLogUri")]
        public string VerboseLogUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ErrorLogUri")]
        public string ErrorLogUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ManifestUri")]
        public string ManifestUri { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.ReturnAddress != null)
            {
                this.ReturnAddress.Validate();
            }
            if (this.ReturnShipping != null)
            {
                this.ReturnShipping.Validate();
            }
            if (this.ShippingInformation != null)
            {
                this.ShippingInformation.Validate();
            }
            if (this.DeliveryPackage != null)
            {
                this.DeliveryPackage.Validate();
            }
            if (this.ReturnPackage != null)
            {
                this.ReturnPackage.Validate();
            }
        }
    }
}
