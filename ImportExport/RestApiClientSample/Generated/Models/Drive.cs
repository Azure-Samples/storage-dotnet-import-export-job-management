// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace StorageImportExport.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Drive
    {
        /// <summary>
        /// Initializes a new instance of the Drive class.
        /// </summary>
        public Drive() { }

        /// <summary>
        /// Initializes a new instance of the Drive class.
        /// </summary>
        public Drive(string driveId, string bitLockerKey, string manifestFile, string manifestHash)
        {
            DriveId = driveId;
            BitLockerKey = bitLockerKey;
            ManifestFile = manifestFile;
            ManifestHash = manifestHash;
        }

        /// <summary>
        /// The drive's hardware serial number, without spaces.
        /// </summary>
        [JsonProperty(PropertyName = "DriveId")]
        public string DriveId { get; set; }

        /// <summary>
        /// The BitLocker key used to encrypt the drive.
        /// </summary>
        [JsonProperty(PropertyName = "BitLockerKey")]
        public string BitLockerKey { get; set; }

        /// <summary>
        /// The relative path of the manifest file on the drive.
        /// </summary>
        [JsonProperty(PropertyName = "ManifestFile")]
        public string ManifestFile { get; set; }

        /// <summary>
        /// The Base16-encoded MD5 hash of the manifest file on the drive.
        /// </summary>
        [JsonProperty(PropertyName = "ManifestHash")]
        public string ManifestHash { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (DriveId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DriveId");
            }
            if (BitLockerKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BitLockerKey");
            }
            if (ManifestFile == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ManifestFile");
            }
            if (ManifestHash == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ManifestHash");
            }
        }
    }
}
