// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace StorageImportExport
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// The Storage Import/Export Client API.
    /// </summary>
    public partial interface IStorageImportExportLib : IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// The subscription ID for the Azure user.
        /// </summary>
        string SubscriptionId { get; set; }

        /// <summary>
        /// Specifies the preferred language for the response.
        /// </summary>
        string AcceptLanguage { get; }

        /// <summary>
        /// If specified, it must be application/json (which specifies the
        /// JSON Light format). Other values will result in response code 406
        /// (Not Acceptable).
        /// </summary>
        string Accept { get; }

        /// <summary>
        /// Specifies the service management version to use for this request
        /// </summary>
        string XMsVersion { get; }


            /// <summary>
        /// List locations to which you can ship the disks associated with an
        /// import or export job. A location is a Microsoft data center
        /// region.
        /// </summary>
        /// <param name='originlocation'>
        /// The location for which alternate locations are being queried. If
        /// this parameter is not specified, all locations will be returned.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ListLocationsResponse>> ListLocationsWithHttpMessagesAsync(string originlocation = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// List storage accounts for which one or more import or export jobs
        /// have been created for a subscription.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ListAccountsResponse>> ListAccountsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// List active and completed jobs for a storage account in a
        /// subscription
        /// </summary>
        /// <param name='storageAccountName'>
        /// The name of the storage account where data will be imported to or
        /// exported from.
        /// </param>
        /// <param name='type'>
        /// Indicates whether this is an import job or an export job. .
        /// Possible values include: 'Import', 'Export'
        /// </param>
        /// <param name='fromParameter'>
        /// Specifies that only jobs created at the specified time or later
        /// should be returned.
        /// </param>
        /// <param name='to'>
        /// Specifies that only jobs created at the specified time or earlier
        /// should be returned.
        /// </param>
        /// <param name='states'>
        /// Optional. Specifies that only jobs whose state matches the
        /// specified value should be returned. Valid values are Creating,
        /// Shipping, Transferring, Packaging, and Completed. Values are
        /// case-sensitive. To specify multiple states, separate values with
        /// a comma, without spaces.
        /// </param>
        /// <param name='top'>
        /// An integer value that specifies how many jobs should be returned.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ListJobsResponse>> ListJobsWithHttpMessagesAsync(string storageAccountName, JobType? type = default(JobType?), string fromParameter = default(string), string to = default(string), string states = default(string), int? top = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get information about an existing job from the Windows Azure
        /// Import/Export service
        /// </summary>
        /// <param name='storageAccountName'>
        /// The name of the storage account where data will be imported to or
        /// exported from.
        /// </param>
        /// <param name='jobName'>
        /// The name of the import/export job.
        /// </param>
        /// <param name='ifModifiedSince'>
        /// A DateTime value. Specify this header to perform the operation
        /// only if the resource has been modified since the specified time
        /// </param>
        /// <param name='ifUnmodifiedSince'>
        /// A DateTime value. Specify this header to perform the operation
        /// only if the resource has not been modified since the specified
        /// date/time.
        /// </param>
        /// <param name='ifMatch'>
        /// An ETag value. Specify this header to perform the operation only
        /// if the resource's ETag matches the value specified.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// An ETag value, or the wildcard character (*). Specify this header
        /// to perform the operation only if the resource's ETag does not
        /// match the value specified.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<GetJobResponse>> GetJobWithHttpMessagesAsync(string storageAccountName, string jobName, string ifModifiedSince = default(string), string ifUnmodifiedSince = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete an existing job, purging the related data from the system.
        /// Only jobs in the Creating or Completed states can be deleted.
        /// </summary>
        /// <param name='storageAccountName'>
        /// The name of the storage account where data will be imported to or
        /// exported from.
        /// </param>
        /// <param name='jobName'>
        /// The name of the import/export job.
        /// </param>
        /// <param name='ifModifiedSince'>
        /// A DateTime value. Specify this header to perform the operation
        /// only if the resource has been modified since the specified time
        /// </param>
        /// <param name='ifUnmodifiedSince'>
        /// A DateTime value. Specify this header to perform the operation
        /// only if the resource has not been modified since the specified
        /// date/time.
        /// </param>
        /// <param name='ifMatch'>
        /// An ETag value. Specify this header to perform the operation only
        /// if the resource's ETag matches the value specified.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// An ETag value, or the wildcard character (*). Specify this header
        /// to perform the operation only if the resource's ETag does not
        /// match the value specified.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<int?>> DeleteJobWithHttpMessagesAsync(string storageAccountName, string jobName, string ifModifiedSince = default(string), string ifUnmodifiedSince = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Create a new job or updates an existing job in the specified
        /// subscription.
        /// </summary>
        /// <param name='storageAccountName'>
        /// The name of the storage account where data will be imported to or
        /// exported from.
        /// </param>
        /// <param name='jobName'>
        /// The name of the import/export job.
        /// </param>
        /// <param name='putJobParameters'>
        /// </param>
        /// <param name='ifModifiedSince'>
        /// A DateTime value. Specify this header to perform the operation
        /// only if the resource has been modified since the specified time
        /// </param>
        /// <param name='ifUnmodifiedSince'>
        /// A DateTime value. Specify this header to perform the operation
        /// only if the resource has not been modified since the specified
        /// date/time.
        /// </param>
        /// <param name='ifMatch'>
        /// An ETag value. Specify this header to perform the operation only
        /// if the resource's ETag matches the value specified.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// An ETag value, or the wildcard character (*). Specify this header
        /// to perform the operation only if the resource's ETag does not
        /// match the value specified.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<int?>> PutJobWithHttpMessagesAsync(string storageAccountName, string jobName, PutJobParameters putJobParameters, string ifModifiedSince = default(string), string ifUnmodifiedSince = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Update specific properties of a job. You can call this operation
        /// to notify the Import/Export service that the hard drives
        /// comprising the import or export job have been shipped to the
        /// Microsoft data center. An Update Job Properties request can also
        /// be used to cancel an existing job.
        /// </summary>
        /// <param name='storageAccountName'>
        /// The name of the storage account where data will be imported to or
        /// exported from.
        /// </param>
        /// <param name='jobName'>
        /// The name of the import/export job.
        /// </param>
        /// <param name='patchJobParameters'>
        /// </param>
        /// <param name='ifModifiedSince'>
        /// A DateTime value. Specify this header to perform the operation
        /// only if the resource has been modified since the specified time
        /// </param>
        /// <param name='ifUnmodifiedSince'>
        /// A DateTime value. Specify this header to perform the operation
        /// only if the resource has not been modified since the specified
        /// date/time.
        /// </param>
        /// <param name='ifMatch'>
        /// An ETag value. Specify this header to perform the operation only
        /// if the resource's ETag matches the value specified.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// An ETag value, or the wildcard character (*). Specify this header
        /// to perform the operation only if the resource's ETag does not
        /// match the value specified.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<int?>> PatchJobWithHttpMessagesAsync(string storageAccountName, string jobName, PatchJobParameters patchJobParameters, string ifModifiedSince = default(string), string ifUnmodifiedSince = default(string), string ifMatch = default(string), string ifNoneMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
